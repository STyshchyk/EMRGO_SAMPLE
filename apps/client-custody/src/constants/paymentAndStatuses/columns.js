import {
  currencyRenderer,
  dateRenderer,
  floatRenderer,
  readyToSettleRenderer,
  titleRenderer,
} from "../../helpers/renderers";

const dateSizing = 120;
const currencySize = 100;
const uuidSize = 350;
const numberSize = 75;
const ibanSize = 250;

export const issuanceColumns = [
  {
    title: "Maturity Date",
    field: "sukuk.maturityDate",
    render: (rowData) => dateRenderer(rowData.sukuk.maturityDate),
    width: dateSizing,
  },
  {
    title: "Issue Date",
    field: "sukuk.issueDate",
    render: (rowData) => dateRenderer(rowData.sukuk.issueDate),
    width: dateSizing,
  },
  {
    title: "Denomination",
    field: "sukuk.denominationName.value",
    render: (rowData) => currencyRenderer(rowData.sukuk.denominationName.value),
    width: currencySize,
  },
  { title: "Profit Rate", field: "sukuk.profitRateTermsName.name", width: 100 },
  { title: "Frequency", field: "sukuk.frequencyName.name", width: 150 },
  {
    title: "Original Price",
    field: "sukuk.issuePrice",
    render: (rowData) => floatRenderer(rowData.sukuk.issuePrice),
    width: numberSize,
  },
  {
    title: "Price",
    field: "sukuk.issuePrice",
    render: (rowData) => floatRenderer(rowData.sukuk.issuePrice),
    width: numberSize,
  },
  {
    title: "Original Profit Rate",
    field: "sukuk.profitRate",
    render: (rowData) => floatRenderer(rowData.sukuk.profitRate),
    width: 150,
  },
  {
    title: "Profit Rate",
    field: "sukuk.profitRate",
    render: (rowData) => floatRenderer(rowData.sukuk.profitRate),
    width: numberSize,
  },
  {
    title: "Original Amount",
    field: "sukuk.issuanceAmount",
    render: (rowData) => currencyRenderer(rowData.sukuk.issuanceAmount),
    width: currencySize,
  },
  {
    title: "Amount",
    field: "sukuk.issuanceAmount",
    render: (rowData) => currencyRenderer(rowData.sukuk.issuanceAmount),
    width: currencySize,
  },
  { title: "WSN", field: "sukuk.wsn", width: 150 },
  { title: "ISIN", field: "sukuk.wsn", width: 150 },
  { title: "Security Short Name", field: "sukuk.securityShortName" },
  { title: "Security Long Name", field: "sukuk.name", width: 250 },
  {
    title: "Settlement Date",
    field: "settlementDate",
    render: (rowData) => dateRenderer(rowData.settlementDate),
    width: dateSizing,
  },
  { title: "Settlement Status", field: "settlementStatus", width: 100 },
  { title: "Settlement Type", field: "settlementType", width: 75 },
  {
    title: "Security Status",
    field: "status",
    render: (rowData) => titleRenderer(rowData.status),
    width: 175,
  },
  {
    title: "NSA",
    field: "netSettleAmount",
    render: (rowData) => currencyRenderer(rowData.sukuk.denominationName.value),
    width: currencySize,
  },
  { title: "# of Certs", field: "numOfCertificates", width: numberSize },
  {
    title: "Ready to Settle",
    field: "readyToSettle",
    render: (rowData) => readyToSettleRenderer(rowData.readyToSettle),
    width: 100,
  },
  { title: "Country of Risk", field: "sukuk.country" },
  {
    title: "Value Date",
    field: "valueDate",
    render: (rowData) => dateRenderer(rowData.valueDate),
    width: dateSizing,
  },
];

export const tradeColumns = [
  {
    title: "Trade Date",
    field: "sukuk.tradeDate",
    render: (rowData) => dateRenderer(rowData.sukuk.tradeDate),
    width: dateSizing,
  },
  { title: "Currency", field: "investorEntity.wethaqAccount.currency", width: 75 },
  {
    title: "Trade ID",
    field: "sukuk.trade.0.id",
    width: uuidSize,
    render: (rowData) => rowData.sukuk.trade[0]?.id,
  },
  {
    title: "Trade Status",
    field: "sukuk.trade.0.status",
    render: (rowData) => titleRenderer(rowData.sukuk.trade[0]?.status),
    width: 100,
  },
  {
    title: "Trade Type",
    field: "sukuk.trade.0.type",
    render: (rowData) => titleRenderer(rowData.sukuk.trade[0]?.type),
    width: 100,
  },
  {
    title: "Direction",
    field: "sukuk.trade.0.direction",
    render: (rowData) => titleRenderer(rowData.sukuk.trade[0]?.direction),
    width: 100,
  },
];

export const accountColumns = [
  // { title: 'Client Acc Balance', field: 'investorEntity.externalAccount.0.accountBalance' },
  { title: "Client Name", field: "investorEntity.corporateEntityName" },
  { title: "Client ID", field: "investorEntity.id", width: uuidSize },
  // { title: 'Client IBAN', field: 'investorEntity.externalAccount.0.IBAN' },
  // { title: 'Client Acc No', field: 'externalAccount.accountNumber' },
  // { title: 'Client Acc Name', field: 'externalAccount.accountName' },
  { title: "Client W IBAN", field: "investorEntity.wethaqAccount.IBAN", width: ibanSize },
  {
    title: "CWAB",
    field: "investorEntity.wethaqAccount.accountBalance",
    render: (rowData) => currencyRenderer(rowData.investorEntity.wethaqAccount.accountBalance),
    width: currencySize,
  },
  { title: "Client Acc Currency", field: "investorEntity.wethaqAccount.currency", width: 100 },
  {
    title: "CAS",
    field: "investorEntity.wethaqAccount.status",
    render: (rowData) => titleRenderer(rowData.investorEntity.wethaqAccount.status),
    width: 100,
  },

  // { title: 'Dealer Acc Balance', field: 'dealer.wethaqAccount.accountBalance' },
  { title: "Dealer Name", field: "dealer.corporateEntityName" },
  { title: "Dealer ID", field: "dealer.id", width: uuidSize },
  // { title: 'Dealer IBAN', field: 'dealer.wethaqAccount.IBAN' },
  // { title: 'Dealer Acc No', field: 'dealer.wethaqAccount.accountNumber' },
  // { title: 'Dealer Acc Name', field: 'dealer.wethaqAccount.accountName' },
  { title: "DWI", field: "dealer.wethaqAccount.IBAN", width: ibanSize },
  {
    title: "DWAB",
    field: "dealer.wethaqAccount.accountBalance",
    render: (rowData) => currencyRenderer(rowData.dealer.wethaqAccount.accountBalance),
    width: currencySize,
  },
  { title: "DAC", field: "dealer.wethaqAccount.currency", width: 100 },
  {
    title: "DAS",
    field: "dealer.wethaqAccount.status",
    render: (rowData) => titleRenderer(rowData.investorEntity.wethaqAccount.status),
    width: 100,
  },
];

export const columnConstants = {
  EMPTY: "",
  MATURITY_DATE: "sukuk.maturityDate",
  ISSUE_DATE: "sukuk.issueDate",
  DENOMINATION: "sukuk.denominationName.value",
  FREQUENCY: "sukuk.frequencyName.name",
  ORIGINAL_PRICE: "sukuk.originalIssuePrice",
  PRICE: "sukuk.issuePrice",
  ORIGINAL_PROFIT_RATE: "sukuk.issuePrice",
  PROFIT_RATE: "sukuk.profitRateTermsName.name",
  ORIGINAL_ISSUANCE_AMOUNT: "sukuk.originalIssuanceAmount",
  ISSUANCE_AMOUNT: "sukuk.issuanceAmount",
  WSN: "sukuk.wsn",
  ISIN: "sukuk.isin",
  TICKER: "sukuk.ticker",
  HYBRID_SUKUK_TYPE: "sukuk.hybridSukukType",
  SECURITY_SHORT_NAME: "sukuk.securityShortName",
  SECURITY_LONG_NAME: "sukuk.securityLongName",
  ISSUANCE_NAME: "sukuk.name",
  SETTLEMENT_DATE: "sukuk.settlementDate",
  SETTLEMENT_STATUS: "settlementStatus",
  SETTLEMENT_TYPE: "settlementType",
  SECURITY_STATUS: "status",
  NET_TRANSFER_AMT: "netSettleAmount",
  NUM_OF_CERT: "numOfCertificates",
  READY_TO_SETTLE: "readyToSettle",
  COUNTRY_OF_RISK: "sukuk.country",
  VALUE_DATE: "sukuk.valueDate",
  TRADE_DATE: "sukuk.tradeDate",
  CURRENCY: "sukuk.currencyName.name",
  TRADE_ID: "sukuk.trade.0.id",
  TRADE_STATUS: "sukuk.trade.0.status",
  TRADE_TYPE: "sukuk.trade.0.type",
  DIRECTION: "sukuk.trade.0.direction",
  EVENT_TYPE: "eventType",
  RECORD_DATE: "recordDate",
  PAYMENT_CURRENCY: "paymentCurrency",
  NUMBER_OF_DAYS: "numberOfDays",
  COUPON_PERIOD: "couponPeriod",
  ACTUAL_PAY_DATE: "actualPayDate",
  TAX_AMOUNT: "taxAmount",
  OTHER_CHARGES: "otherCharges",
  NET_AMOUNT: "netAmount",
  EXTRA_RATE: "extraRate",
  ICSD: "icsd",
  AVAILABLE_SECURITIES: "availableSecurities",
  BLOCKED_SECURITIES: "blockedSecurites",
  INVESTOR_NAME: "investorEntity.corporateEntityName",
  INVESTOR_ID: "investorEntity.id",
  INVESTORY_W_IBAN: "investorEntity.wethaqAccount.iban",
  INVESTOR_CASH_ACCT: "investorCashAccount",
  INVESTOR_CASH_ACCT_BALANCE: "investorEntity.wethaqAccount.accountBalance",
  INVESTOR_CASH_ACCT_CURRENCY: "investorEntity.wethaqAccount.currency.name",
  INVESTOR_CASH_ACCT_STATUS: "investorEntity.wethaqAccount.status",
  INVESTOR_SEC_ACCT: "investorSecuritiesAccount",
  INVESTOR_SEC_ACCT_BALANCE: "investorSecuritiesAccountBalance",
  FROM_SEC_ACCT: "fromSecuritiesAccount",
  TO_SEC_ACCT: "toSecuritiesAccount",
  QUANTITY: "quantity",
  PARTICIPATION_INV: "participationStatus",
  ADMISSION_LA_OB: "admissionStatus",
  OBLIGOR: "obligor.corporateEntityName",
  ARRANGER: "dealer.corporateEntityName",
  ISSUER_NAME: "issuer.corporateEntityName",
  ISSUER_ID: "issuer.id",
  ISSUER_W_IBAN: "issuer.wethaqAccount.iban",
  ISSUER_CASH_ACCT: "issuerCashAccount",
  ISSUER_CASH_ACCT_BALANCE: "issuer.wethaqAccount.accountBalance",
  ISSUER_CASH_ACCT_CCY: "issuer.wethaqAccount.currency.name",
  ISSUER_CASH_ACCT_STATUS: "issuer.wethaqAccount.status",
  ISSUER_SEC_ACCT: "issuerSecuritiesAccount",
  ISSUER_SEC_ACCT_BALANCE: "issuerSecuritiesAccountBalance",
};
