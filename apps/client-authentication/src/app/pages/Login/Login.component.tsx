import { FC } from "react";
import { Link } from "react-router-dom";

import { clientPrimariesRoutes as routes } from "@emrgo-frontend/constants";
import { ArrowBackwardIcon,Button, Checkbox, FormikInput, Logo } from "@emrgo-frontend/shared-ui";
import { ensureNotNull, processAPIErrors } from "@emrgo-frontend/utils";

import { Heading, OneCol, OneColCheck, SubHeading } from "../../components/Form";
import { LoginHelp } from "../../components/LoginHelp";
import { SixDigitCodeInput } from "../../components/SixDigitCodeInput";
import { useLoginContext } from "./Login.provider";
import * as Styles from "./Login.styles";
import { ILoginFormValues, ILoginProps } from "./Login.types";

export const LoginComponent: FC<ILoginProps> = (props: ILoginProps) => {
  const { form, showPassword, setShowPassword, handleNext, handleBack, activeStep,isError, error } = ensureNotNull(useLoginContext());
  
  return (
    <Styles.LoginForm onSubmit={form.handleSubmit}>
      <Logo />
      {activeStep === 0 && (
        <>
          <div>
            <Heading>Login</Heading>
            <SubHeading>You&apos;re now ready to access Emrgo.</SubHeading>
          </div>

          <OneCol>
            <FormikInput<ILoginFormValues>
              label="Email Address"
              maxWidth={458}
              form={form}
              id="email"
            />
          </OneCol>

          <OneCol>
            <FormikInput<ILoginFormValues>
              label="Password"
              maxWidth={458}
              form={form}
              id="password"
              type={showPassword ? "text" : "password"}
            />
          </OneCol>

          <OneColCheck>
            <Checkbox
              onChange={(e: React.ChangeEvent<HTMLInputElement>) => setShowPassword(e.target.checked)}
            >
              Show password
            </Checkbox>
          </OneColCheck>

          <OneCol>
            <Button 
              size="large" 
              disabled={!form.isValid}        
              onClick={handleNext}
            >
              Submit
            </Button>
          </OneCol>
          {isError && (
            <Styles.Error>
              <Styles.ErrorIcon />
              <span>{processAPIErrors(error)}</span>
            </Styles.Error>
          )}
      </>
      )}


      {activeStep === 1 && (
          <Styles.Form $isAligned={true}>
            <Styles.BackButton onClick={handleBack} type={"button"}>
              <ArrowBackwardIcon />
            </Styles.BackButton>
            <Heading align={"center"}>Enter Security Code</Heading>
            <SubHeading align={"center"}>
              Enter the security code generated by your two-factor authentication app. You will be
              provided a new security code every 30 seconds.
            </SubHeading>
            <OneCol>
            <SixDigitCodeInput
                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion
                value={form.values.code!}
                onChange={(value) => {
                  form.setFieldValue("code", value);

                  if (form.isValid) console.log("valid");

                }}
              />
            </OneCol>
            <OneCol>
              <Button 
                size="large" 
                disabled={!form.isValid}  
                type={"submit"}      
              >
                Submit
              </Button>
            </OneCol>
            <Styles.Spacer />
            <Styles.HelpListItem>
              <Link to={""}>Raise support ticket</Link>
            </Styles.HelpListItem>
          </Styles.Form>
      )}

      <Styles.Spacer />

      <LoginHelp />
    </Styles.LoginForm>
  );
};
